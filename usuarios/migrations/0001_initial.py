# Generated by Django 2.1.5 on 2020-06-17 04:01

import core.helpers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import usuarios.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', usuarios.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nm_completo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome Completo')),
                ('nr_cpf_cgc', models.CharField(blank=True, max_length=11, null=True, validators=[core.helpers.validate_CPF], verbose_name='CPF')),
                ('ds_codigo_conselho', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código do Conselho')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to=usuarios.models.foto_perfil_directory_path)),
                ('cidade', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cidade')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('idade', models.IntegerField(null=True)),
                ('sexo', models.CharField(choices=[('1:', 'MASCULINO'), ('2:', 'FEMININO'), ('3:', 'OUTROS VALORES')], default='OUTROS VALORES', max_length=20)),
                ('tipo_usuario', models.CharField(choices=[('1:', 'ADMINISTRADOR'), ('2:', 'PRESTADOR'), ('3:', 'PACIENTE')], default='PRESTADOR', max_length=30)),
                ('nrTelCelular', models.CharField(blank=True, max_length=11, null=True, verbose_name='Nº telefone celular')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'perfil',
                'verbose_name_plural': 'perfis',
            },
        ),
    ]
